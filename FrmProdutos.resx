<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADfGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGJFJREFUeJztnQl0U9edh91M2+n0dE7XmU6n7WEN2LL2xbsk8IJtSABr
        YbEcyEoISUgptgEHMA5L0oQAdnLaSZisDkmTlgkwaaZnOj1JgEBCm5OUNAXvS2KDsSV5JQSw79wrIMWy
        LGt50n1P+n3nfMdZwLp67/5/7977toQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADioE232N6isb/RqLR2NKgsznqlpb9RbW1p1tr+0Ky2LuDdPgBABPhUb7+l
        QWnp+VvyQuLPOmXR+TatvYJ3ewEAAtGmtdVOVPje0tFBR1Pqkh/ybjsAIAxaNfYDwRb/NU8rLJ+3pdp1
        vL8DACAE2nT2qlCL/8spgaLo8/Y0+495fxcAQBC0ptinnJIvHA600E/Ji0iD2kJatDaPDSorOU3/G/t/
        jSprJ+/vAwAIgiat9Vgghd+ksZKzaUuJy1RC3D7sSl9KWrV20q6z7+D9nQAAAdCqc/yIFveI3/m9fCEt
        /CU+i96nWSUneX8vAEAAtGhsT/pf3Csi3ZmOwIv/S2/R8P5uAEgOkpBwQ4t20aomte09Op8+06iynGtU
        W0+3aO01XTL7t4T+PPoZ7f7m+t0ZxSEUfwmdJjgeELqtAMQ0rXprSb2qaMDPUPwynWOXCvmZp+VFl8f7
        vM7UIIb93gFgLHlcyHYCENO0aqw7A1qBpzZrF+0S5DNT7LLxPoeOOkIu/isB4HhKiDYCEPO06+2lp4I5
        5y5fSFp1S+aF+7mtOvsd430GW9EPKwBMJY8KsW0AiGnaMpb8ex0d2tcrLaRJY/Mcea+dU5/g8ltnuJ/d
        rLHu8PW765VFYRW/R6PjZ0JsHwBimq704m1O49gCOkuPwI0qi98QaNfZi8P57FaddY+v39umt4cfAKbi
        2UJtIwBiFrfJ8a6/QmrT2ce/MEdtey+cz27R2J729XvPBHPO3/cC4CVXrv3bQm0jAGIWWizdExUUuwJv
        nGmAK5zPbhnnzj9nVijn/UfN/9/vMd2SRL/bfdRn3MaS4y6jo8VlcnTRqcHf6M/fuswl93Rn3P7PQm1H
        ACQJLRbnRAXFCpJdkOPjtOBwOJ/dpLW97OvCn3CH/7TAhwP8s300HEqJ3f4PQm1PACQFLYCTgRRLu2GR
        z1EAu5Q31M9u1tp+NXYBMLzTfyFpLDncl3PL94XcrgBIAjoC2BtIkfQYHT4DoM1gTQ71s5s1tu1j1xU4
        BMCVacPpc8bQwwwA0UISKm/oNd6ST+fBv6CdvZYOkf+T/iynP41snhxokbCjs3fBfqpdlBZqu9p01jXe
        v69FY+MSAFdD4M8duhXfFHLbA8CVXuPSFLfR8bEQBdLq44xAq35xRqhtY5cee/++Zo4BcEXHE0JufwC4
        4c5y2OhR/4JQxfGpj3UA9jCPUNvHwkNMIwDPKMBYctmZuSzkaQ0AouDK8F644meym3PGFKzZ/I1Q29ik
        s39bfCMAj88LuCsAiC7tafZ/okPZNqELozNtdACcki8cCbetp+RFox4G0iSOAOhrMS8POdgA4Aodxt4b
        icLwDoA6xcKL4ba1TlF0YfTFRXzOAnjrMhabhNgXAEQddl47IgHgNQVoUBb1hdvWeqXFPeo6AIWFe/F7
        NJbcIcS+ACDq0OF/fySKoiNlsfelwB3htrVRZW0V+kpAQUYAJgfeOASkB9Gt+FqkisL7LECT2vLXcNvb
        pLZ+4L0QyLv4rwRAyWoh9gcAUcdtdAxGoijYbbqjV+ytR8Jta6vG9uaYm4GM4d0MJIhZDpsQ+wKAqOMy
        Ov4QiaJo1tpGB4DWvj/ctrZorHu9A6A7M7ynAQlw9B8ZyMa7BoFEcZodSyNRGOw6fa+Ldp4Mt63s7b7e
        AXA2zMeBCeBRIfYDAFxg1/67jCVvCV0Y7LFho24E0to2hNtW9lQh7wDoTF3MNQCc5pICIfYDANzoz7rt
        X9wmx0dCFgZ7Q8/1hUqLd2m47Ww3WExjbjAyLOJW/HT4/xshtj8A3GFPvGF3/rE5rQCFMfYy4DDuBLxG
        c3rxpDG3GOt4BYDjL11m4V9+AgBXXKZiBS3g/3AbHWeCLIh+l9HR6HmkVlbx75vYG4LUtveatdbfNevs
        zwnxpiD2JqIx9wNouVwOfLTfvPQHQmxvAESLZ2pgLMlmC4W9ppIVX2osXuw0FRf2mB1prtnFk9j9BNFq
        E7un4PoACPelIMGNbBwXacg9QmT2r0fr+wIAroNdT0CLvoW9h7BBaemnI40Bl7HkLLs1N3KFX+Kkxb+L
        Bt5PeH9/AIAP2NmMLvPyf3NlLVOy0Qk9Ui+no5V1tHh301HMvqtnOj65MrVxDI1b7CxIjCWt9O/9H/1z
        O9gqP474AMQY7Om+vVnF36VOZQ/5ZP9MCu7/R97tAgAAAAAAAAAAAAAAAAAAAAAAAAAAAADPDVNtOntV
        o9p6ul5p6W2g0n+ua9VYd5CEyq/ybh8AIEK0pCyaXa+wDPp6M7Pn3QzKovMdusVzeLcTACAwnXq7+bR8
        4fB4xX/9G5raDYvyebcXACAQbNhfr7IMTFT8171QZQjTATCKoeezf9y7L8/uqs253/liXjkMXFdt3ir3
        vjkLna/M+SmPfefrYanX3p3IHpl2JnUJ6UhZQtp0ds/LVDxvatbYtvNoKxAJg/vzf9TzQs7ec89lt57Z
        a77c8ZSJwPA9s3fWJbZN3bW5Tw4cvDkqjwtvUls/9noLEzmXUTzO7c4OTyg0aqx10WgbEBn9+wrM3c/n
        fNLxtJl7scS8dBt3P5990rkvPz2S+7RBaem5/oWpLuPEDzk5l770T5FsExAZA/vz/pV2xvc6n0LhR9vO
        p000CHKP9e6b991I7Nv6qwFwSl5EnFkBvinJWHI4Em0BIsT50pzFZ/fO+oJ3IcS7Z5+ZdaGnNk/w14g1
        qS0nPY9e1wf+hGQ6SnhG6HYAEeJ8Yc7WziCG+2yEQOewxFmbR3pfzif91IFXCmAQ9lN79+UT54t5nm05
        atT1tHnEVZu7Wch93KqxlbMAGG/eP85zDm8Wsg1AhLhq8x7reDqwIarzhVwy+NpccvHAfHLp4AIooGyb
        Dr46l27jHLq9aRiw7f1inqCr8A1KS5/LFNjwnx79T5CEhK8I+flAZPS9lLe6c4LiZ0cmd+0ccuH1m7kX
        Sbx44b9u8oyu2KiM/rxbqP3dkrIoLZB3OdDi7+6dvWyaUJ8LRMjAr/PknXvNw/6K/9yz2eTC/pu4F0S8
        +jnd9l3Pzb7Q90rhDKH2O3tHA3tpiZ/3GrzHHoIq1OcBkUI7Voe/4u99aQ73AoBsarCATrvm/UHIfc+G
        9r1Gxxw6Gvgle/U7Lfo/uk2OX7FHpWPYHwf01uZW+Cv+gV8Xcu/40MtDC3J49xsQI3Q9M7t/3OJ/pYB/
        Z4djPbDgOO9+A2KA3pdyV2LYL00vHpifyrv/AIlz7tnsU76Kv/u5bO4dHE7ggflP8e4/QMIQknBD517T
        mJV/dioQq/3i9+LB+Z10H2KRDoRG/77Chb6O/m4M/SXjhQPzZbz7EZAorhdzfjX2Qh8T6Xk+x3MFGoyW
        uZ7LgL8I4YrKy68vKObdj4BE6Xku5x3eN7vAv9v1bDYb1gcVABcPzBf0HgEQR7D7znl3ejja87+dF9wo
        4MD8X/LuR0CinHs2p5F3h4ejDXbx9eLBBS/w7kdAopx7bnYT7w4P/66rNi/oNQAEAAgZ7wDofj6HDLw6
        F3Lw8xBPuyIAQMh4B0Dfy/ncT2tBBEDc0KJbNLdFbTvUqLb8pUlt/bBZa3u50bBEH63P9w4AXPcvPREA
        EqQjfWlig9rymc+3sFBbNLaPWlTLvxPpdowJANz1JzkRABLjM6VVc1pedGmiN7GwxzW1p9m/F8m2IACk
        LwJAQrDXMTUoi/oCfR1Tk8rySSTbgwCQvggACdGqtW4LtPiv2aZflBup9iAApC8CQEI0qi0t4xV6s8ZG
        PjMsJh0piz2vYWpSW6+MAtTW30eqPQgA6YsAkBDsXetjCl9rG/fNLN1ZxaTNsOj9SLUHASB9EQASok5p
        ueA1vA/geeyO/ZFqDwJA+iIAJESjytL95QKf2hboCxkej1R7EADSFwEgIVq1tv3XAiDQVzL1mkryItUe
        BID0RQBIiPoUx09OyxcO1ystgR79PyQJlTdEqj0IAOmLAJAYrTr7piaNbWTiAHD0O80l8ki2BQEgfREA
        EqQrbekyl9Hh9rPw1+I2OrSRbgcCQPoiACRKX84t33eZHJvZW1fpz3NXXtLoeNuV5bi/xbz8G9FoAwJA
        +iIAQMggAKQvAgCEDAJA+iIAQMggAKQvAgCEDAJA+iIAQMggAKQvAgCEDAJA+iIAQMggAKQvAgCEDAJA
        +iIAQMggAKQvAgD4pNKc8NVKs6pkc5Zi/8YseeOGjOS+8lTZpbLUpBEYm5anyYbXp8susn29KVNeV2lU
        vrx1VvLiyoSEiN1QBkRGlUlz8yaj/KN1qbLLpSlJBEIW/PQgcKLSrL2Jd/8EEYId7Ssy5N1lIuhwUJyy
        vvFgZvLZqllKK+/+CgRiqzH5pxszk+tQ+DBQy1JkZKNR/sme7NQf8u6/IAy2zFIvX5eWhKE+DEm2XlBp
        Uhfz7scgBLaY5I+V0iQPaqenJpENGclks1FBHpqlItuy1WRHDoxlt81WkS0mJRv6k7LUsX2iLFVGHjIp
        t/LuzyAINpsUTwRa9GynV9KCfyRPQ/bM1ZOaeQYYp1ZTH5ujJVVmJVmXljy6j5gVO3n3axAAW2Yp7i31
        keTerkuTke30CI+ihz6dayCP5GpIRWbylyGwzaxcybt/Az9sz0qR0R017PeIT91Kh/d75oqgk0FJ+EiO
        xnPAYKeOd+QoZ/Du52Ac6Dyuw1/xb0hPJjvzddw7FJSebKTI1oY2Zijaefdz4INKk3K1v+LflKXAcB+G
        LVsYrsJUQHxUZCT3jlf8bJGPd8eBsePjBbpjvPs7uI7K2cmW8Y/8clI9D0d+KKzVBSky3v0eXIXOzY76
        vpAjGcN+GCmrePd7cJX16bIhXwHwWL6WdyeBsepcwwne/R5QKnW6b/o6788u5uDeSWDsOtfwxVM63dd4
        9/+4p2qWbt7Yc/0ysrsQQ38YWXfn62fy7v9xT+Usxaoxq/4mHP1h5K2eq8/g3f/jniqTosI7AB6dg7k/
        jLxPzDPk8+7/cc8Wo3LT9cVfnirz3NTBu3PAOLBQX8i7/8c9vgKgIkMO4cRmJtPpoiL09SIEAH8qM5Xb
        ovmQCBh7siBAAEiUBzOSn+HdgaD0DWkUgADgz8ZMxeO8Ow+UtuVpSaGtGyEA+OO9BgBhMLI1I/bgD0wB
        JIp3AGydrSI787UQTujj1LBuFEMA8Mc7AB7OCTHNIQxWBAB/EACQmwgA/iAAIDcRAPxBAEBuIgD4gwCA
        3EQA8AcBALmJAOAPAgByEwHAHwQA5CYCgD8IAMhNBAB/EACQmwgA/oQbAI/maZ0Vmcn1a/Qz6lepbmxf
        oZjafZdiag/zjuSpvSvk07pWqaa3PaCb0bAhXVa/c47Gxb3jQZ/uLtQ5H85WnagyK9/ZmKl4e3267Gh5
        atKJdWmyY8z1afJ3N2Yp3nrIrDxM+8kHuwt0PQgAiRNsAOwp0A+VpyXVrVBMO3OrbPLFZYmTSLDeljT5
        i5XKaR20g9XvLtRe5t3x41f9pe05mvdpgL9D930DdSTIm4Hon09son//8PZs1fHqQsMQAkBiBBQABYbh
        iozkurvkU53LEicHXfD+vDVp8uV71Te2PpyrOsO/IOLDXQXa9k30SF5qSDor7N2BiYNspPBwjvpPNYWG
        YQSABPAXAOxov1o/s5Ee6S8JWfTjyQLmoWxVO+8CCdTqebpLTN7tCNTH8rQNdNR1fG2K/1fAC2FZSmLr
        FpPy7epC3XkEgIjxFQC7Cw0X6Jy98dakScPBFvHypMmskMlK5XRCj+xktXYm+ZmOqp9Jfq5P9PgA/ff7
        NTeSe1XTyd2KaeS25CmjfsdK5dTOnfk6N++Cmch7VNM+ZfJux0TuoXN7NkyPRuH7GBV0bTEr36Yjgi8Q
        ACLEOwDWpsw8E+wR/87kqZ5iZkUeakdZa0gkq2korFBMJcvpNGM5DZ+y1KQ63sUzng/oZzRc+/5r9DNF
        285ts1THSg2JzugX/tgRwY7Z6vcRACLjWgCsTUkcuUsxZSDghTzZFLKKHuF/TgtX6M6y1pBE7qVhcDv9
        jLvk07p20qkI70K6XrYIuizpulEPDazyNJmoQoAe9QfWZ8h8vvSVpxvSZO+yEQkCQCSwAKBHs0E6dA9o
        uH8HHa6v1s6IWodhn0WDqX97juYz3kXFXJeeXOdz6kNdly6r590+5s58fWvplVV97gXv28SuHZ6FQgQA
        d+5Tz1gfSOHfHuXC9/Y+zY2Dm7Jkf+NZWHQOXbfcz1mQW2WTyEN0yM2zjWwFng753fyL3L9sPWJDZmIe
        7/4f96yUT980wWk6z3Ccd4fxdBpD4uWKdNl7u+cZRqJaWAWGYXYx00QhuVrnWQMZ2WxUvLUnym1kn7fF
        6Dm1d5n3fgp4f+qTMALgjb8AuFMxLSJz/HAt0yf9ZeccbVc0CuvRPE0Pnfb0+T3zQb3fa3RUnir7YFeB
        7mw02rirUH+uPE12gvd+QQBIEF8BwIa596nFcdQfz5/rZ7o3pMtORmo0wH5vaerMuuVJk0f8n/acNO7U
        iA5ze7ZFckpQaBimU44jYljlRwBIFF8BcI9qOvfOEVAI0NHJ3arpXRsz5Y1CFlaVWdFMj/qDgVzzEMi6
        SHlq0keP5ulOCdnGR3LVH5alJP6V9z5AAEgcKQfANe9RTyd3yKcMsNNz9Mh9MaSiovN8drMSLfz+QE+D
        Bnndw8i6FNkHbPU71PUB+vcubp+tOsYChfc2RwDECLEQAMwHdDM8C5bsAqK7ldPOsDDYka3q9DdFYFcb
        shuSVtA/z+5JCPQaiLsUU9l1E+G0t7MiXXaY3Xm3u1A/7t2RLCgez9e3bc9WH69ITz4s1aE+AkDExEoA
        eDqUIYmsVE7znqOP3C6bMsSO7Mw7k6e62b9PNLf3fZpvMjsdKXzbaWGXpco+XpcqO8EWD6/68VpD4gDv
        bYoAiHFiKQCuuUafSO6UTw2quCda6GPbJMyjPvQSASACYjEArvkzGgRsRMCmBqEU/m30iL+KFb6B/3eJ
        RREAIiCWA+DLjmZI8tyVeA8NA3Yp8/Ik3wXPhvjsTkZW9Gt0od/YBAPcLwgA/sRDAPjsfHQ4v0Y/0yM7
        nYijPId9gADgT7wGAOQvAkAEIAAgLxEAIgABAHmJABABCADISwSACEAAQF4iAEQAAgDyEgEgAhAAkJcI
        ABGAAIC8RACIAAQA5CUCQAQgACAvEQAiAAEAeYkAEAEIAMhLBIAIQABAXiIARAACAPISASACEACQlwgA
        EYAAgLxEAITB+TcenDT435sPDR3c/GY4drxU+qePa1a6r/f0L+/tbN77QBOEkdT56vrD4fZfVgOsFnjX
        IxeG3th8v/u1smH3r9cSCOPOV0tHzv+uqpx3HXJl6M0qQ99v1w9y3xkQRtG+/evPn39jq4l3/YkC9+u7
        vzPw+oMNvHcKhNFw4PWKtv63dv6Ad92JjqFDm2vpsIj7DoIwMpYSNu/nXWeihobAGvdrpcPeG27w4EYy
        eGgzhJJ04ODGL86/saWMd31JAl/rAv37N5Dhw7sIebcGQolZ/RF5p2YK77qSFL7WBXpfKyOX/vgLEexQ
        CAP0aM0r5M9PfZN3PUmWsesCpeTC/2yjG7ea/86FcFyrL1PX8a6fmMDX9QJDhzaRkSMIAShCj1b3kGM1
        ubzrJqbAugCUhpjvRwysC0BRi/l+dMC6ABSXmO9HHawLQFGI+T4/sC4A+Yr5PnewLgC5iPm+uMC6AIyO
        mO+LFqwLwIiK+b74Of9mZdbAgQeb+l+v+PSaQ4e2fEyO7PkN3YGvwet8t/p/fXTyM9zbJUprXiTHd0/m
        3b8BEAwailk+jnRHeLcLABAFEAAAxDEIAADiGAQAAHEMAgCAOAYBAEAcgwAAII5BAAAQxyAAAIhjEAAA
        xDEIAADiGAQAAHEMAgCAOAYBAEAcgwAAII5BAAAQxyAAAIhjEAAAxDEIAAA4QN7Z9SNypFrH3z13+AiA
        D/m3i3rsCQX5a+XXee8rAASDEPIVcrTmmYg/vTZWPFrdRY7VZPLebwAIAnn3iZu4F5XUPFp9kvd+A0AQ
        yJGa+7gXlOSsHuC93wAQBHJ8z420Q3/Ov6ikZHUt7/0GgGCQozVG2qkP0s79Z5F4kranh/7sp7aJoD1X
        rT5Gt9Uj5K0nv8V7nwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAYPw/4JurplxQdZwAAAAASUVORK5CYII=
</value>
  </data>
</root>